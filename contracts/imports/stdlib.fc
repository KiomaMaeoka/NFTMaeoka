;; Funções básicas de storage
() set_data(cell c) impure asm "c4 POP";
cell get_data() asm "c4 PUSH";

;; Funções de parsing
slice begin_parse(cell c) asm "CTOS";
(slice, int) load_uint(slice s, int len) asm( -> 1 0) "LDUX";
(slice, slice) load_msg_addr(slice s) asm( -> 1 0) "LDMSGADDR";
builder store_uint(builder b, int x, int len) asm "STUX";
builder store_slice(builder b, slice s) asm "STSLICER";
cell end_cell(builder b) asm "ENDC";
builder begin_cell() asm "NEWC";

;; Comparação
forall X -> int equal_slices (slice a, slice b) asm "SDEQ";

;; Funções de slice
int slice_empty?(slice s) asm "SEMPTY";
int slice_refs(slice s) asm "SREFS";
int slice_bits(slice s) asm "SBITS";

;; Store ref
builder store_ref(builder b, cell c) asm "STREF";
(slice, cell) load_ref(slice s) asm( -> 1 0) "LDREF";